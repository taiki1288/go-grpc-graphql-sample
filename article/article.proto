syntax = "proto3";

package article;
option go_package = "article/pb";

// やり取りする記事の型定義
message Article {
    int64 id = 1;
    string author = 2;
    string title = 3;
    string content = 4;
}

// CreateとUpdateにおける入力のための型
message ArticleInput {
    string author = 1;
    string title = 2;
    string content = 3;
}

// Createする記事の内容(author, title, content)を受け取る
message CreateArticleRequest {
    ArticleInput articleInput = 1;
}

// Createした記事を返す
message CreateArticleResponse {
    Article article = 1;
}

// Readする記事のIDを受け取る
message ReadArticleRequest {
    int64 id = 1;
}

// 該当するIDの記事を返す
message ReadArticleResponse {
    Article article = 1;
}

// Updateする記事のIDと変更内容を受け取る
message UpdateArticleRequest {
    int64 id = 1;
    ArticleInput articleinput = 2;
}

// Updateした記事を返す
message UpdateArticleResponse {
    Article article = 1;
}

// Deleteした記事のIDを受け取る
message DeleteArticleRequest {
    int64 id = 1;
}

// Deleteする記事のIDを返す
message DeleteArticleResponse {
    int64 id = 1;
}

// 全取得の際は入力なし
message ListArticleRequest {

}

// 全取得した記事を1つずつ返すから、配列(repeted)ではなくArticleを1つ返す形
message ListArticleResponse {
    Article article = 1;
}

service ArticleService {
    rpc CreateArticle(CreateArticleRequest) returns(CreateArticleResponse);
    rpc ReadArticle(ReadArticleRequest) returns(ReadArticleResponse);
    rpc UpdateArticle(UpdateArticleRequest) returns(UpdateArticleResponse);
    rpc DeleteArticle(DeleteArticleRequest) returns(DeleteArticleResponse);
    rpc ListArticle(ListArticleRequest) returns(stream ListArticleResponse);
}

/*ListArticleの場合だけServerStreamingで複数のレスポンスを返す*/